{"version":3,"sources":["images/background-image.jpg","App/Container/styled.js","App/Container/index.js","App/Header/styled.js","App/Header/index.js","App/Form/Label/styled.js","App/Form/Label/index.js","App/Form/Select/styled.js","App/Form/Select/index.js","App/Form/Amount/styled.js","App/Form/Amount/index.js","App/Form/Button/styled.js","App/Form/Button/index.js","App/Form/Clock/styled.js","App/Form/Clock/index.js","App/Form/Clock/useClock.js","App/Form/styled.js","App/Form/index.js","App/Form/useRate.js","App/Result/styled.js","App/Result/index.js","App/Footer/styled.js","App/Footer/index.js","App/InformationBox/styled.js","App/InformationBox/index.js","App/useRates.js","App/App.js","App/useCurrenciesData.js","serviceWorker.js","GlobalStyle.js","index.js"],"names":["module","exports","Wrapper","styled","main","Container","children","HeaderWrapper","header","HeaderTitle","h1","Header","mainTitle","LabelContainer","label","Label","title","inputName","htmlFor","SelectContainer","select","first","css","Select","currencyRates","selectName","stateValue","onChange","currencyNames","Object","keys","sort","a","b","localeCompare","id","value","required","map","currencyName","key","Input","input","Amount","type","min","step","Exchange","button","Button","ClockContainer","p","Clock","useState","Date","newDate","setNewDate","useEffect","intervalId","setInterval","clearInterval","date","toLocaleString","undefined","weekday","hour","minute","second","day","month","year","useClock","setDateString","FormWrapper","form","loading","Fieldset","fieldset","Legend","legend","Flexbox","InformParagraph","Form","calculate","fromCurrencyName","setFromCurrencyName","toCurrencyName","setToCurrencyName","amountValue","setAmountValue","rate","fromCurrency","useRate","onSubmit","event","preventDefault","target","ResultWrapper","section","ResultHeader","h2","ResultContent","span","Result","resultContainer","resultValue","toFixed","FooterWrapper","footer","FooterLink","Footer","href","rel","BoxWrapper","div","Information","InformationBox","errorState","useRates","appState","setAppState","setLoading","setTimeout","fetch","then","response","ok","Error","satusText","json","data","rates","saveRates","catch","App","setResultContainer","useCurrenciesData","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","backgroundImage","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.72727b7d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background-image.79f7fce8.jpg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.main`\r\n    max-width: 800px;\r\n    margin: 20px auto;\r\n    display: grid;\r\n    grid-template-rows: 100px 1fr 100px 80px;\r\n    grid-gap: 20px;\r\n\r\n    @media(max-width:670px) {\r\n        margin: 20px auto;\r\n        grid-template-rows: 200px 1fr 100px 130px;\r\n    }\r\n`;","import React from \"react\";\r\nimport {Wrapper} from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n  <Wrapper>\r\n    {children}\r\n  </Wrapper>\r\n);\r\n\r\nexport default Container;","import styled from \"styled-components\";\r\n\r\nexport const HeaderWrapper = styled.header`\r\n    padding: 10px;\r\n    width: 100%;\r\n    color:black;\r\n    background-color: teal;\r\n    display:flex;\r\n    flex-flow: row wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const HeaderTitle = styled.h1`\r\n    font-weight: 800;\r\n    font-size: 35px;\r\n`;","import React from \"react\";\r\nimport {HeaderWrapper, HeaderTitle} from \"./styled\";\r\n\r\nconst Header = ({ mainTitle }) => (\r\n  <HeaderWrapper>\r\n    <HeaderTitle>{mainTitle}</HeaderTitle>\r\n  </HeaderWrapper>\r\n)\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const LabelContainer = styled.label`\r\n    background-color: teal;\r\n    padding: 10px;\r\n    font-weight: 800;\r\n\r\n    @media(max-width:530px) {\r\n        width: 100%;\r\n        margin-left: 0px;\r\n    }\r\n`;","import React from \"react\";\r\nimport {LabelContainer} from \"./styled\";\r\n\r\nconst Label = ({ title, inputName }) => (\r\n  <LabelContainer htmlFor={inputName}>{title}</LabelContainer>\r\n);\r\n\r\nexport default Label;","import styled, { css } from \"styled-components\";\r\n\r\nexport const SelectContainer = styled.select`\r\n    margin-left: 89px;\r\n    padding: 10px;\r\n    width: 200px;\r\n    border: 2px solid teal;\r\n\r\n    ${({ first }) => first && css`\r\n        margin-left: 67px;\r\n    `}\r\n\r\n    @media(max-width:530px) {\r\n        width: 100%;\r\n        margin-top: 10px;\r\n        margin-left: 0px;\r\n    }\r\n`;","import React from \"react\";\r\nimport { SelectContainer } from \"./styled\";\r\n\r\nconst Select = ({ currencyRates, selectName, stateValue, onChange, first }) => {\r\n  const currencyNames = Object.keys(currencyRates);\r\n  currencyNames.sort((a, b) => a.localeCompare(b));\r\n  return (\r\n    <SelectContainer\r\n      first={first}\r\n      id={selectName}\r\n      value={stateValue}\r\n      onChange={onChange}\r\n      required\r\n    >\r\n      {\r\n        currencyNames.map(currencyName => (\r\n          <option key={currencyName} value={currencyName}>{currencyName}</option>\r\n        ))\r\n      }\r\n    </SelectContainer>\r\n\r\n  )\r\n};\r\n\r\nexport default Select;","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n    margin-left: 30px;\r\n    padding: 10px;\r\n    width: 200px;\r\n    border: 2px solid teal;\r\n\r\n    @media(max-width:530px) {\r\n        width: 100%;\r\n        margin-top: 10px;\r\n        margin-left: 0px;\r\n    }\r\n`;","import React from \"react\";\r\nimport { Input } from \"./styled\";\r\n\r\nconst Amount = ({ stateValue, onChange }) => (\r\n  <Input\r\n    type=\"number\"\r\n    id=\"amount\"\r\n    min=\"1\"\r\n    step=\"0.01\"\r\n    value={stateValue}\r\n    onChange={onChange}\r\n    required\r\n  />\r\n);\r\n\r\nexport default Amount;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Exchange = styled.button`\r\n    font-weight: 800;\r\n    padding: 10px;\r\n    width: 410px;\r\n    border: 3px solid teal;\r\n    background-color: hsl(180, 100%, 33%);\r\n\r\n    &:hover{\r\n        background-color: hsl(180, 100%, 36%);\r\n        border: 3px solid black;\r\n        cursor: pointer;\r\n    }\r\n\r\n    @media(max-width:530px) {\r\n        width: 100%;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { Exchange } from \"./styled\";\r\n\r\nconst Button = () => (\r\n  <Exchange>Exchange!</Exchange>\r\n);\r\n\r\nexport default Button;","import styled from \"styled-components\";\r\n\r\nexport const ClockContainer = styled.p`\r\n    text-align: right;\r\n    font-family: monospace;\r\n`;","import React from \"react\";\r\nimport {useClock} from \"./useClock\";\r\nimport { ClockContainer } from \"./styled\";\r\n\r\nconst Clock = () => {\r\n    const [newDate, setDateString] = useClock();\r\n\r\n    return (\r\n        <ClockContainer>Dzisiaj jest {setDateString(newDate)}  </ClockContainer>\r\n    )\r\n};\r\n\r\nexport default Clock;","import {useState, useEffect} from \"react\";\r\n\r\nexport const useClock = () => {\r\n    const [newDate, setNewDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId =\r\n            setInterval(\r\n                () => {\r\n                    setNewDate(new Date());\r\n                }, 1000);\r\n        return () => {\r\n            clearInterval(intervalId)\r\n        }\r\n    }, []);\r\n\r\n    const setDateString = (date) => {\r\n        return (date.toLocaleString(undefined, {\r\n            weekday: \"long\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            day: \"numeric\",\r\n            month: \"long\",\r\n            year: \"numeric\"\r\n        }));\r\n    };\r\n\r\n    return [newDate, setDateString];\r\n};","import styled, { css } from \"styled-components\";\r\n\r\nexport const FormWrapper = styled.form`\r\n    text-align: center;\r\n\r\n    ${({ loading }) => loading && css`\r\n        display:none;\r\n    `}\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    padding: 30px;\r\n    border: 2px solid teal;\r\n    background-color: #eee;\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    background-color: teal;\r\n    padding: 10px;\r\n    font-weight: 800;\r\n`;\r\n\r\nexport const Flexbox = styled.p`\r\n    @media(max-width:530px) {\r\n        display: flex;\r\n        flex-flow: column;\r\n    }\r\n`;\r\n\r\nexport const InformParagraph = styled(Flexbox)`\r\n    font-weight: 700;\r\n    margin-top:30px;\r\n`;\r\n\r\n","import React, { useState } from \"react\";\r\nimport Label from \"./Label\";\r\nimport Select from \"./Select\";\r\nimport Amount from \"./Amount\";\r\nimport Button from \"./Button\";\r\nimport Clock from \"./Clock\";\r\nimport { useRate } from \"./useRate\";\r\nimport { \r\n        FormWrapper, \r\n        Fieldset, \r\n        Legend, \r\n        Flexbox, \r\n        InformParagraph \r\n       } from \"./styled\";\r\n\r\nconst Form = ({ calculate, currencyRates, loading, date }) => {\r\n  const [fromCurrencyName, setFromCurrencyName] = useState(\"PLN\");\r\n  const [toCurrencyName, setToCurrencyName] = useState(\"EUR\");\r\n  const [amountValue, setAmountValue] = useState(\"\");\r\n  const rate = useRate(fromCurrencyName, toCurrencyName, currencyRates)\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculate(rate, amountValue, fromCurrencyName, toCurrencyName)\r\n    setAmountValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <FormWrapper onSubmit={onFormSubmit} loading={loading === true ? \"loading\" : \"\"} >\r\n      <Fieldset>\r\n        <Legend>Currency coverter input data</Legend>\r\n        <Clock />\r\n        <Flexbox>\r\n          <Label\r\n            title=\"From currency:\"\r\n            inputName=\"fromCurrency\"\r\n          />\r\n          <Select\r\n            first\r\n            selectName=\"fromCurrency\"\r\n            stateValue={fromCurrencyName}\r\n            onChange={({ target }) => setFromCurrencyName(target.value)}\r\n            currencyRates={currencyRates}\r\n          />\r\n        </Flexbox>\r\n        <Flexbox>\r\n          <Label\r\n            title=\"To currency:\"\r\n            inputName=\"toCurrency\"\r\n          />\r\n          <Select\r\n            selectName=\"toCurrency\"\r\n            stateValue={toCurrencyName}\r\n            onChange={({ target }) => setToCurrencyName(target.value)}\r\n            currencyRates={currencyRates}\r\n          />\r\n\r\n        </Flexbox>\r\n        <Flexbox>\r\n          <Label\r\n            title=\"Amount to convert:\"\r\n            inputName=\"amount\"\r\n          />\r\n          <Amount\r\n            stateValue={amountValue}\r\n            onChange={({ target }) => setAmountValue(target.value)}\r\n          />\r\n        </Flexbox>\r\n        <Button />\r\n        <InformParagraph>Current rates comes from European Central Bank for day {date} </InformParagraph>\r\n      </Fieldset>\r\n    </FormWrapper>\r\n  )\r\n};\r\n\r\nexport default Form;\r\n","\r\nexport const useRate = (fromCurrencyName, toCurrencyName, currencyRates) => {\r\n    \r\n    const fromCurrency = currencyRates[fromCurrencyName];\r\n    const toCurrency = currencyRates[toCurrencyName]\r\n    const currentRate = (toCurrency / fromCurrency);\r\n\r\n    return currentRate;\r\n};","import styled, { css } from \"styled-components\";\r\n\r\nexport const ResultWrapper = styled.section`\r\n    display:flex;\r\n    flex-flow:row wrap;\r\n    padding: 10px;\r\n    max-width: 800px;\r\n    background-color: teal;\r\n    font-weight: 800;\r\n\r\n    ${({ loading }) => loading && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const ResultHeader = styled.h2`\r\n    font-size: 24px;\r\n`;\r\n\r\nexport const ResultContent = styled.span`\r\n    max-width:800px;\r\n    margin-left:5px;\r\n    text-decoration: underline;\r\n`;","import React from \"react\";\r\nimport { ResultWrapper, ResultHeader, ResultContent } from \"./styled\";\r\n\r\nconst Result = ({ loading, resultContainer }) => {\r\n  return (\r\n    <ResultWrapper loading={loading === true ? \"loading\" : \"\"}>\r\n      <ResultHeader>Here you see result:\r\n        <ResultContent>\r\n          {resultContainer.amountValue} {resultContainer.fromCurrencyName}\r\n          {resultContainer.resultValue !== undefined ? \" = \" : \" \"}\r\n          {resultContainer.resultValue !== undefined ? resultContainer.resultValue.toFixed(0) : \" \"} {resultContainer.toCurrencyName}\r\n        </ResultContent>\r\n      </ResultHeader>\r\n    </ResultWrapper>\r\n  )\r\n};\r\n\r\nexport default Result;","import styled from \"styled-components\";\r\n\r\nexport const FooterWrapper = styled.footer`\r\n    background-color: #eee;\r\n    max-width: 100%;\r\n    color: black;\r\n    padding: 10px;\r\n    text-align: center;\r\n    border: 2px solid teal;\r\n`;\r\n\r\nexport const FooterLink = styled.a`\r\n    color: black;\r\n    text-decoration: none;\r\n\r\n    &:hover{\r\n        color: teal;\r\n    }\r\n`;","import React from \"react\";\r\nimport {FooterWrapper, FooterLink} from \"./styled\";\r\n\r\nconst Footer = () => (\r\n  <FooterWrapper>Currency Converter by Michał Janiec &copy; All right reserved 2020.\r\n    <p>Icon made by [turkkub] from\r\n      <FooterLink\r\n        href=\"https://www.flaticon.com/authors/freepik\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n      >\r\n        {\" \"}www.flaticon.com\r\n      </FooterLink>\r\n    </p>\r\n  </FooterWrapper>\r\n)\r\n\r\nexport default Footer;","import styled, { css } from \"styled-components\";\r\n\r\nexport const BoxWrapper = styled.div`\r\n    display:none;\r\n    text-align: center;\r\n    padding: 30px;\r\n    border: 5px solid teal;\r\n    background-color: #eee;\r\n\r\n    ${({ loading }) => loading && css`\r\n        display:flex;\r\n        flex-direction:column;\r\n        align-items:center;\r\n        justify-content: center;\r\n    `}\r\n\r\n`;\r\n\r\nexport const Information = styled.h2`\r\n    color: teal;\r\n    font-size:35px;\r\n    font-style: italic;\r\n`;\r\n\r\n","import React from \"react\";\r\nimport { BoxWrapper, Information } from \"./styled\";\r\n\r\nconst InformationBox = ({ loading, errorState }) => {\r\n    return (\r\n        <BoxWrapper loading={loading === true ? \"loading\" : \"\"} >\r\n            <Information>\r\n                {\r\n                    errorState === true\r\n                        ?\r\n                        \"Ups... We have some problem... :( Please check your network connection or contact with website support: mail@ggmail.com\"\r\n                        :\r\n                        \"Loading... We connecting with server to dwonload current currensies rates. Thank you for patient! :)\"\r\n                }\r\n            </Information>\r\n        </BoxWrapper>\r\n    )\r\n};\r\n\r\nexport default InformationBox;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useRates = () => {\r\n    const [appState, setAppState] = useState(\r\n        {\r\n            loading: false,\r\n            errorState: false,\r\n            currencyRates: {},\r\n            date: \"\"\r\n        });\r\n\r\n    const saveRates = (data) => {\r\n        setAppState({\r\n            ...appState,\r\n            currencyRates: data.rates,\r\n            date: data.date\r\n        })\r\n    };\r\n\r\n    const setLoading = () => {\r\n        setAppState({\r\n            ...appState,\r\n            loading: !appState.loading\r\n        })\r\n    };\r\n\r\n    const setError = () => {\r\n        setAppState({\r\n            ...appState,\r\n            loading: true,\r\n            errorState: true\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            fetch(\"https://api.exchangeratesapi.io/latest?base=PLN\")\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error(response.satusText);\r\n                    }\r\n                    return response;\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => saveRates(data))\r\n                .then(setLoading())\r\n                .catch(setError())\r\n        }, 2500);\r\n        setLoading();\r\n    }, [])\r\n\r\n    return appState;\r\n};","import React from 'react';\nimport Container from \"./Container\";\nimport Header from \"./Header\";\nimport Form from \"./Form\";\nimport Result from \"./Result\";\nimport Footer from \"./Footer\";\nimport InformationBox from \"./InformationBox\";\nimport { useCurrenciesData } from \"./useCurrenciesData\";\nimport { useRates } from \"./useRates\";\n\nfunction App() {\n  const { calculate, resultContainer } = useCurrenciesData();\n  const appState = useRates();\n\n  return (\n    <Container>\n      <Header mainTitle=\"Currency Converter by {Imperator}\" />\n      <InformationBox loading={appState.loading} errorState={appState.errorState} />\n      <Form\n        loading={appState.loading}\n        calculate={calculate}\n        currencyRates={appState.currencyRates}\n        date={appState.date}\n      />\n      <Result\n        loading={appState.loading}\n        resultContainer={resultContainer}\n      />\n      <Footer />\n    </Container>\n  );\n};\n\nexport default App;\n","import { useState } from \"react\";\r\n\r\nexport const useCurrenciesData = () => {\r\n  const [resultContainer, setResultContainer] = useState(\"\")\r\n\r\n  const calculate = (rate, amountValue, fromCurrencyName, toCurrencyName) => {\r\n    setResultContainer({\r\n      resultValue: amountValue * rate,\r\n      amountValue,\r\n      fromCurrencyName,\r\n      toCurrencyName,\r\n    })\r\n  };\r\n\r\n\r\n  return { calculate, resultContainer }\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from \"styled-components\";\r\nimport backgroundImage from \"./images/background-image.jpg\"\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        background-image: url(${backgroundImage});\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n        background-position:center;\r\n        color: #000;\r\n        font-family: 'Open Sans', sans-serif;\r\n    }\r\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App.js';\nimport * as serviceWorker from './serviceWorker';\nimport {GlobalStyle} from \"./GlobalStyle\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}