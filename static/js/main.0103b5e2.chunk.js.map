{"version":3,"sources":["App/Container/index.js","App/Header/index.js","App/Form/Label/index.js","App/Form/Select/index.js","App/Form/Amount/index.js","App/Form/Button/index.js","App/CurrenciesRates/index.js","App/Form/Clock/index.js","App/Form/index.js","App/Result/index.js","App/Footer/index.js","App/App.js","serviceWorker.js","index.js"],"names":["Container","children","className","Header","mainTitle","Label","title","inputName","htmlFor","Select","currenciesRates","modifierClass","selectName","stateValue","onChange","id","value","required","map","currencyRate","key","fullName","Amount","type","min","step","Button","rate","Clock","useState","Date","newDate","setNewDate","useEffect","intervalId","setInterval","clearInterval","toLocaleString","undefined","weekday","hour","minute","second","day","month","year","Form","exchangeCurrency","writeToSymbol","writeFromSymbol","writeAmountValue","fromCurrencyName","setFromCurrencyName","toCurrencyName","setToCurrencyName","amountValue","setAmountValue","fromCurrency","find","toCurrency","onSubmit","event","preventDefault","currentRate","toFixed","target","Result","resultValue","toCurrencySymbol","fromCurrencySymbol","Footer","href","rel","App","setFromCurrencySymbol","setResultValue","setToCurrencySymbol","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0103b5e2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n  <main className=\"container\">\r\n    {children}\r\n  </main>\r\n);\r\n\r\nexport default Container;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Header = ({ mainTitle }) => (\r\n  <header className=\"header\">\r\n    <h1 className=\"header__title\">{mainTitle}</h1>\r\n  </header>\r\n)\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Label = ({ title, inputName }) => (\r\n  <label className=\"form__label\" htmlFor={inputName}>{title}</label>\r\n);\r\n\r\nexport default Label;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Select = ({ currenciesRates, modifierClass, selectName, stateValue, onChange }) => (\r\n\r\n  <select\r\n    className={`form__select ${modifierClass}`}\r\n    id={selectName}\r\n    value={stateValue}\r\n    onChange={onChange}\r\n    required\r\n  >\r\n    {\r\n      currenciesRates.map(currencyRate => (\r\n        <option key={currencyRate.id} value={currencyRate.id}>{currencyRate.fullName}</option>\r\n      ))\r\n    }\r\n  </select>\r\n\r\n);\r\n\r\nexport default Select;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Amount = ({ stateValue, onChange }) => (\r\n  <input\r\n    type=\"number\"\r\n    className=\"form__input\"\r\n    id=\"amount\"\r\n    min=\"1\"\r\n    step=\"0.01\"\r\n    value={stateValue}\r\n    onChange={onChange}\r\n    required\r\n  />\r\n);\r\n\r\nexport default Amount;\r\n\r\n","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nconst Button = () => (\r\n  <button className=\"form__button\">Exchange!</button>\r\n);\r\n\r\nexport default Button;","export const currenciesRates = [\r\n    {\r\n        id: \"EUR\",\r\n        fullName: \"Euro\",\r\n        rate: 4.4573\r\n    },\r\n    {\r\n        id: \"GBP\",\r\n        fullName: \"Pound sterling\",\r\n        rate: 4.9328\r\n    },\r\n    {\r\n        id: \"USD\",\r\n        fullName: \"US Dollar\",\r\n        rate: 3.9741\r\n    },\r\n    {\r\n        id: \"CHF\",\r\n        fullName: \"Swiss franc\",\r\n        rate: 4.1811\r\n    },\r\n    {\r\n        id: \"PLN\",\r\n        fullName: \"Polish zÅ‚oty\",\r\n        rate: 1.0\r\n    }\r\n];\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nconst Clock = () => {\r\n    const [newDate, setNewDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId =\r\n            setInterval(\r\n                () => {\r\n                    setNewDate(new Date());\r\n                }, 1000);\r\n        return () => {\r\n            clearInterval(intervalId)\r\n        }\r\n    }, []);\r\n\r\n    const setDateString = (date) => {\r\n       return (date.toLocaleString(undefined, {\r\n            weekday: \"long\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            day: \"numeric\",\r\n            month: \"long\",\r\n            year:\"numeric\"\r\n        }));\r\n    };\r\n\r\n\r\n    return (\r\n        <p className=\"clock\">Dzisiaj jest {setDateString(newDate)}  </p>\r\n    )\r\n};\r\n\r\nexport default Clock;","import React, { useState } from \"react\";\r\nimport Label from \"./Label\";\r\nimport Select from \"./Select\";\r\nimport Amount from \"./Amount\";\r\nimport Button from \"./Button\";\r\nimport { currenciesRates } from \"../CurrenciesRates/index.js\";\r\nimport Clock from \"./Clock\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({\r\n  exchangeCurrency,\r\n  writeToSymbol,\r\n  writeFromSymbol,\r\n  writeAmountValue }) => {\r\n  const [fromCurrencyName, setFromCurrencyName] = useState(\"EUR\");\r\n  const [toCurrencyName, setToCurrencyName] = useState(\"PLN\");\r\n  const [amountValue, setAmountValue] = useState(\"\");\r\n  const fromCurrency = currenciesRates.find(({ id }) => id === fromCurrencyName);\r\n  const toCurrency = currenciesRates.find(({ id }) => id === toCurrencyName);\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const currentRate = (fromCurrency.rate / toCurrency.rate).toFixed(2);\r\n    exchangeCurrency(currentRate, amountValue);\r\n    writeFromSymbol(fromCurrency.id);\r\n    writeToSymbol(toCurrency.id);\r\n    writeAmountValue(amountValue);\r\n    setAmountValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onFormSubmit} >\r\n      <fieldset className=\"form__fieldset\">\r\n        <legend className=\"form__legend\">Currency coverter input data</legend>\r\n        <Clock />\r\n        <p className=\"flexbox\">\r\n          <Label\r\n            title=\"From currency:\"\r\n            inputName=\"fromCurrency\"\r\n          />\r\n          <Select\r\n            modifierClass=\"form__select--firstSelect\"\r\n            selectName=\"fromCurrency\"\r\n            stateValue={fromCurrencyName}\r\n            onChange={({ target }) => setFromCurrencyName(target.value)}\r\n            currenciesRates={currenciesRates}\r\n          />\r\n        </p>\r\n        <p className=\"flexbox\">\r\n          <Label\r\n            title=\"To currency:\"\r\n            inputName=\"toCurrency\"\r\n          />\r\n          <Select\r\n            selectName=\"toCurrency\"\r\n            stateValue={toCurrencyName}\r\n            onChange={({ target }) => setToCurrencyName(target.value)}\r\n            currenciesRates={currenciesRates}\r\n          />\r\n\r\n        </p>\r\n        <p className=\"flexbox\">\r\n          <Label\r\n            title=\"Amount to convert:\"\r\n            inputName=\"amount\"\r\n          />\r\n          <Amount\r\n            stateValue={amountValue}\r\n            onChange={({ target }) => setAmountValue(target.value)}\r\n          />\r\n        </p>\r\n        <Button />\r\n      </fieldset>\r\n    </form >\r\n  )\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Result = ({ resultValue, toCurrencySymbol, amountValue, fromCurrencySymbol }) => {\r\n  return (\r\n    <section className=\"section\">\r\n      <h2 className=\"section__header\">Here you see result:\r\n        <span className=\"section__result\">\r\n          {amountValue} {fromCurrencySymbol}\r\n          {resultValue !== \"\" ? \" = \" : \" \"}\r\n          {resultValue} {toCurrencySymbol}\r\n        </span>\r\n      </h2>\r\n    </section>\r\n  )\r\n};\r\n\r\nexport default Result;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">Currency Converter by MichaÅ‚ Janiec &copy; All right reserved 2020.\r\n    <p>Icon made by [turkkub] from\r\n      <a\r\n        className=\"footer__link\"\r\n        href=\"https://www.flaticon.com/authors/freepik\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n      >\r\n        www.flaticon.com\r\n      </a>\r\n    </p>\r\n  </footer>\r\n)\r\n\r\nexport default Footer;","import React, { useState } from 'react';\nimport Container from \"./Container\";\nimport Header from \"./Header\";\nimport Form from \"./Form\";\nimport Result from \"./Result\";\nimport Footer from \"./Footer\";\nimport {currenciesRates} from \"./CurrenciesRates/index.js\";\n\nfunction App() {\n\n  const [amountValue, setAmountValue] = useState(\"\");\n  const [fromCurrencySymbol, setFromCurrencySymbol] = useState(\"\");\n  const [resultValue, setResultValue] = useState(\"\");\n  const [toCurrencySymbol, setToCurrencySymbol] = useState(\"\");\n\n  const exchangeCurrency = (currentRate, amountValue) => {\n    setResultValue(resultValue => (amountValue * currentRate).toFixed(2))\n  };\n\n  const writeToSymbol = (toCurrencyName) => {\n    setToCurrencySymbol(toCurrencyName)\n  };\n\n  const writeAmountValue = (amountValue) => {\n    setAmountValue(amountValue);\n  }\n  const writeFromSymbol = (fromCurrencyName) => {\n    setFromCurrencySymbol(fromCurrencyName)\n  };\n\n  return (\n    <Container>\n      <Header mainTitle=\"Currency Converter by {Imperator}\" />\n      <Form\n        exchangeCurrency={exchangeCurrency}\n        currenciesRates={currenciesRates}\n        writeFromSymbol={writeFromSymbol}\n        writeToSymbol={writeToSymbol}\n        writeAmountValue={writeAmountValue}\n      />\n      <Result\n        resultValue={resultValue}\n        toCurrencySymbol={toCurrencySymbol}\n        amountValue={amountValue}\n        fromCurrencySymbol={fromCurrencySymbol}\n      />\n      <Footer />\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}